// proID/backend/src/server.js - FINAL VERSION with User Routes Mounted
require('dotenv').config({ path: '../.env' });
const express = require('express');
const cors = require('cors');
// --- Pool creation/connection handled in db.js ---

const app = express();
const port = process.env.PORT || 5000;

// --- Middleware ---
app.use(cors({ origin: '*' })); // Consider restricting origin in production
app.use(express.json());
app.use(express.urlencoded({ extended: true }));

// --- Routes ---
// Health Check Route
app.get('/api/health', (req, res) => {
    res.json({ status: 'UP', timestamp: new Date().toISOString(), app: 'proID Backend' });
});

// Auth Routes (Register, Login)
console.log('>>> Mounting /api/auth routes');
const authRoutes = require('./routes/authRoutes');
app.use('/api/auth', authRoutes);

// User Routes (Protected - e.g., /me)
console.log('>>> Mounting /api/users routes');
const userRoutes = require('./routes/userRoutes'); // Require the user routes file
app.use('/api/users', userRoutes); // Mount them under /api/users

// --- Error Handling ---
// Basic error handler - enhance as needed
app.use((err, req, res, next) => {
    console.error(err.stack);
    res.status(500).send('Server Error!');
});

// --- Start Server ---
app.listen(port, '0.0.0.0', () => {
    // Using simple concatenation for safety
    console.log('proID Backend listening at http://0.0.0.0:' + port);
});

// --- No module.exports needed here ---